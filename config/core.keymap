#define ZMK_BEHAVIORS_KEEP_SK
#define ZMK_BEHAVIORS_KEEP_MT
#define ZMK_BEHAVIORS_KEEP_KT
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0>;
            require-prior-idle-ms = <200>;
        };

        tab_combo {
            bindings = <&kp TAB>;
            key-positions = <7 8>;
            layers = <0>;
            require-prior-idle-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp A        &kp B        &kp C
                &kp D        &kp E        &kp D
                &kp E        &kp F        &mo 1
            >;
        };

        layer_1 {
            bindings = <
                &kp 1   &kp 2   &kp 3
                &kp 4   &kp 5   &kp 6
                &kp 7   &kp 8   &mo 2
            >;
        };

        layer_2 {
            bindings = <
                &kp F1       &kp F2       &kp F3
                &kp LEFT     &kp DOWN     &kp RIGHT
                &none        &none        &mo 3
            >;
        };

        // === BLUETOOTH LAYER ===
        layer_3 {
            bindings = <
                &studio_unlock   &bt BT_SEL 1   &bt BT_SEL 2
                &bt BT_SEL 3     &bt BT_DISC    &bt BT_CLR_ALL
                &bt BT_NXT       &bt BT_PRV     &mo 0
            >;
        };

        // === Encoder Bindings ===
        // Add one entry per encoder you defined in devicetree (left_encoder, etc.)
        sensor-bindings = <
            &inc_dec_kp C_VOL_UP C_VOL_DN   // Default: Volume
        >;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <0 1>;
            then-layer = <2>;
        };
    };
};
